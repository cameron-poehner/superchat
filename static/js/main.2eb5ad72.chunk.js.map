{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","disabled","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAqBSA,IAASC,KAAKC,QACnBF,IAASG,cAXE,CACbC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOjB,IAAMC,EAAOZ,IAASY,OAChBC,EAAYb,IAASa,YAuB3B,SAASC,IAKP,OACE,wBAAQC,UAAU,UAAUC,QALL,WACvB,IAAMC,EAAW,IAAIjB,IAASY,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAGrB,iCAIJ,SAASG,IACP,OAAOR,EAAKS,aACV,wBAAQN,UAAU,WAAWC,QAAS,kBAAMJ,EAAKU,WAAjD,sBAIJ,SAASC,IAEP,IAAMC,EAAQC,mBACRC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAJnC,EAMCC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EANW,sBAQgBC,mBAAS,IARzB,mBAQXC,EARW,KAQAC,EARA,KAUZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ5B,EAAKS,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW7C,IAASa,UAAUiC,WAAWC,kBACzCN,MACAC,aATgB,OAWlBN,EAAa,IAEbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAiBjB,OACE,qCACA,iCACGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,sBAAMC,IAAKhC,OAEb,uBAAMiC,SAAUpB,EAAhB,UACE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,UAC9D,wBAAQG,KAAK,SAASC,UAAW3B,EAAjC,wBAMR,SAASkB,EAAYU,GAAQ,IAAD,EACMA,EAAMT,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbsB,EAAevB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAE7D,OACE,sBAAK1B,UAAS,kBAAaiD,GAA3B,UACE,qBAAKC,IAAKvB,EAAUwB,IAAI,KACxB,4BAAItB,OAKKuB,MAxFf,WAAgB,IAAD,EAEEC,YAAaxD,GAArByD,EAFM,oBAIb,OACE,sBAAKtD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACA,2CACA,cAACK,EAAD,OAGA,kCACGiD,EAAO,cAAC9C,EAAD,IAAe,cAACT,EAAD,UChChBwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2eb5ad72.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport './App.css';\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyDMCDCxVqvW1INzSL-cA7ULPo3qcS3Jqa4\",\n  authDomain: \"superchat-4a6cd.firebaseapp.com\",\n  databaseURL: \"https://superchat-4a6cd.firebaseio.com\",\n  projectId: \"superchat-4a6cd\",\n  storageBucket: \"superchat-4a6cd.appspot.com\",\n  messagingSenderId: \"373829690780\",\n  appId: \"1:373829690780:web:25b35ab0ebeec6351ad459\",\n  measurementId: \"G-GB4R8EQGML\"\n  };\n    if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n    }\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>SuperChat</h1>\n      <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return(\n    <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  \n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth'});\n    \n  }\n\n  return(\n    <>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n      <span ref={dummy}></span>\n    </main>\n    <form onSubmit={sendMessage} >\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n        <button type=\"submit\" disabled={!formValue}>Send</button>\n    </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n \n  return( \n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"\" />\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}